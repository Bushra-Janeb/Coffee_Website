{"ast":null,"code":"var _jsxFileName = \"/Users/bushrajaneb/Desktop/coffe-app/src/views/ProductForm/form/form.tsx\";\nimport React from 'react';\nimport { Component } from 'react';\nimport './form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      id: 0,\n      coffee_type: '',\n      coffeePrice: null,\n      description: '',\n      image_source: \"C:\\fakepath\\mocha-latte.jpeg\"\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      console.log(this.state);\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      };\n\n      try {\n        const response = await fetch('localhost:3000/graphql', requestOptions);\n        const data = await response.json();\n        this.setState(prevState => ({ ...prevState\n        }));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }\n\n  componentDidMount() {\n    //@ts-ignore.\n    const prop = this.props.location.state;\n    console.log(this.state, prop === null || prop === void 0 ? void 0 : prop.cof);\n\n    if (prop) {\n      this.setState(prevState => ({ ...prevState,\n        ...(prop === null || prop === void 0 ? void 0 : prop.cof)\n      }));\n    }\n  }\n\n  getData(val) {\n    console.log(val);\n    this.setState({\n      [val.target.name]: val.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" Barnsley Brew Coffee \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          onSubmit: this.onSubmit,\n          method: \"POST\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"img_preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"image\",\n            src: this.state.image_source\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"choose-file\",\n              children: \"Choose Coffee Image \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => this.getData(e),\n              type: \"file\",\n              id: \"choose_file\",\n              className: \"form_control\",\n              name: \"image_source\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"coffee_name\",\n              children: \"Coffee Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => this.getData(e),\n              type: \"text\",\n              id: \"coffee_name\",\n              className: \"form_control\",\n              value: this.state.coffee_type,\n              name: \"coffee_type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"coffee_description\",\n              children: \" Description \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => this.getData(e),\n              type: \"text\",\n              id: \"coffee_description\",\n              className: \"form_control\",\n              value: this.state.description,\n              name: \"description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit\",\n              children: \" Submit \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/bushrajaneb/Desktop/coffe-app/src/views/ProductForm/form/form.tsx"],"names":["React","Component","Form","constructor","props","state","isEdit","id","coffee_type","coffeePrice","description","image_source","onSubmit","e","preventDefault","console","log","requestOptions","method","headers","response","fetch","data","json","setState","prevState","error","componentDidMount","prop","location","cof","getData","val","target","name","value","render"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Component } from 'react';\nimport './form.css';\n\nclass Form extends Component {\n    constructor(props: any) {\n        super(props);\n    }\n\n    state = {\n        isEdit: false,\n        id: 0,\n        coffee_type: '',\n        coffeePrice: null,\n        description: '',\n        image_source: \"C:\\fakepath\\mocha-latte.jpeg\",\n    }\n\n    onSubmit = async (e: any) => {\n        e.preventDefault();\n        console.log(this.state);\n        const requestOptions = {\n            method: 'POST',\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n        };\n        try {\n            const response = await fetch('localhost:3000/graphql', requestOptions)\n            const data = await response.json()\n            this.setState((prevState)  => ({ ...prevState }))\n        } catch (error) {\n         console.log(error);\n        }\n    }\n\n    componentDidMount() {\n        //@ts-ignore.\n        const prop = this.props.location.state\n        console.log(this.state, prop?.cof);\n        if(prop) {\n            this.setState((prevState)  => ({ ...prevState, ...prop?.cof }))\n        }\n    }\n\n    getData(val: any) {\n        console.log(val);\n        this.setState({ [val.target.name]: val.target.value })\n    }\n\n    render() {\n        return (\n            <>\n                <div className=\"form-wrapper\">\n                    <div className=\"title\">\n                        <p> Barnsley Brew Coffee </p>\n                    </div>\n                    <form className=\"form\" onSubmit={this.onSubmit} method='POST'>\n                        <div className=\"img_preview\">\n                        </div>\n                        <img className=\"image\" src={this.state.image_source} />\n                        <div className=\"form_group\">\n                            <label htmlFor=\"choose-file\">Choose Coffee Image </label>\n                            <input onChange={(e) => this.getData(e)} type=\"file\" id=\"choose_file\" className=\"form_control\" name='image_source' />\n                        </div>\n\n                        <div className=\"form_group\">\n                            <label htmlFor=\"coffee_name\">Coffee Name</label>\n                            <input onChange={(e) => this.getData(e)} type=\"text\" id=\"coffee_name\" className=\"form_control\" value={this.state.coffee_type} name='coffee_type' />\n                        </div>\n\n                        <div className=\"form_group\">\n                            <label htmlFor=\"coffee_description\"> Description </label>\n                            <input onChange={(e) => this.getData(e)} type=\"text\" id=\"coffee_description\" className=\"form_control\" value={this.state.description} name='description' />\n                        </div>\n\n                        <div className=\"button\">\n                            <button className=\"submit\"> Submit </button>\n                        </div>\n                    </form>\n                </div>\n            </>\n        );\n    }\n}\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}