{"ast":null,"code":"var _jsxFileName = \"/Users/bushrajaneb/Desktop/coffe-app/src/views/ProductForm/form/form.tsx\";\nimport React from 'react';\nimport { Component } from 'react';\nimport './form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      id: 0,\n      coffee_type: '',\n      coffee_price: null,\n      description: '',\n      image_source: \"\"\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      console.log(e.target.image_source);\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      };\n\n      try {\n        const image = await fetch('localhost:3000/upload', requestOptions);\n        const response = await fetch('localhost:3000/graphql', requestOptions);\n        const data = await response.json();\n        this.setState(prevState => ({ ...prevState\n        }));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }\n\n  componentDidMount() {\n    //@ts-ignore.\n    const prop = this.props.location.state;\n    console.log(this.state, prop === null || prop === void 0 ? void 0 : prop.cof);\n\n    if (prop) {\n      this.setState(prevState => ({ ...prevState,\n        ...(prop === null || prop === void 0 ? void 0 : prop.cof)\n      }));\n    }\n  } // getData(val: any) {\n  //     console.log(val);\n  //     this.setState({ [val.target.name]: val.target.value })\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" Barnsley Brew Coffee \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            onSubmit: this.onSubmit,\n            method: \"POST\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"img_preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"image\",\n              src: this.state.image_source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"choose-file\",\n                children: \"Choose Coffee Image \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => this.getData(e),\n                type: \"file\",\n                id: \"choose_file\",\n                className: \"form_control\",\n                name: \"image_source\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"coffee_name\",\n                children: \"Coffee Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => this.getData(e),\n                type: \"text\",\n                id: \"coffee_name\",\n                className: \"form_control\",\n                value: this.state.coffee_type,\n                name: \"coffee_type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"coffee_description\",\n                children: \" Description \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => this.getData(e),\n                type: \"text\",\n                id: \"coffee_description\",\n                className: \"form_control\",\n                value: this.state.description,\n                name: \"description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"coffee_price\",\n                children: \" Price \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => this.getData(e),\n                type: \"number\",\n                id: \"coffee_price\",\n                className: \"form_control\",\n                defaultValue: this.state.coffee_price || '' || 0,\n                name: \"price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit\",\n              children: \" Submit \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/bushrajaneb/Desktop/coffe-app/src/views/ProductForm/form/form.tsx"],"names":["React","Component","Form","constructor","props","state","isEdit","id","coffee_type","coffee_price","description","image_source","onSubmit","e","preventDefault","console","log","target","requestOptions","method","headers","image","fetch","response","data","json","setState","prevState","error","componentDidMount","prop","location","cof","render","getData"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Component } from 'react';\nimport './form.css';\n\nclass Form extends Component {\n    constructor(props: any) {\n        super(props);\n    }\n\n    state = {\n        isEdit: false,\n        id: 0,\n        coffee_type: '',\n        coffee_price: null,\n        description: '',\n        image_source: \"\",\n    }\n\n    onSubmit = async (e: any) => {\n        e.preventDefault();\n        console.log(e.target.image_source);\n        const requestOptions = {\n            method: 'POST',\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n        };\n        try {\n            const image = await fetch('localhost:3000/upload', requestOptions)\n            const response = await fetch('localhost:3000/graphql', requestOptions)\n            const data = await response.json()\n            this.setState((prevState) => ({ ...prevState }))\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    componentDidMount() {\n        //@ts-ignore.\n        const prop = this.props.location.state\n        console.log(this.state, prop?.cof);\n        if (prop) {\n            this.setState((prevState) => ({ ...prevState, ...prop?.cof }))\n        }\n    }\n\n    // getData(val: any) {\n    //     console.log(val);\n    //     this.setState({ [val.target.name]: val.target.value })\n    // }\n\n    render() {\n        return (\n            <>\n            <div className=\"container\">\n                <div className=\"form-wrapper\">\n                    <div className=\"title\">\n                        <p> Barnsley Brew Coffee </p>\n                    </div>\n                    <form className=\"form\" onSubmit={this.onSubmit} method='POST'>\n                        <div className=\"img_preview\">\n                        </div>\n                        <img className=\"image\" src={this.state.image_source} />\n                        <div className=\"form_group\">\n                            <label htmlFor=\"choose-file\">Choose Coffee Image </label>\n                            <input onChange={(e) => this.getData(e)} type=\"file\" id=\"choose_file\" className=\"form_control\" name='image_source' />\n                        </div>\n\n                        <div className=\"form_group\">\n                            <label htmlFor=\"coffee_name\">Coffee Name</label>\n                            <input onChange={(e) => this.getData(e)} type=\"text\" id=\"coffee_name\" className=\"form_control\" value={this.state.coffee_type} name='coffee_type' />\n                        </div>\n\n                        <div className=\"form_group\">\n                            <label htmlFor=\"coffee_description\"> Description </label>\n                            <input onChange={(e) => this.getData(e)} type=\"text\" id=\"coffee_description\" className=\"form_control\" value={this.state.description} name='description' />\n                        </div>\n                        <div className=\"form_group\">\n                            <label htmlFor=\"coffee_price\"> Price </label>\n                            <input onChange={(e) => this.getData(e)} type=\"number\" id=\"coffee_price\" className=\"form_control\" defaultValue={this.state.coffee_price || '' || 0 } name='price' />\n                        </div>\n\n                        <button className=\"submit\"> Submit </button>\n                    </form>\n                </div>\n            </div>\n            </>\n        );\n    }\n}\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}