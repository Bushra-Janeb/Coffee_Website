{"ast":null,"code":"var _jsxFileName = \"/Users/bushrajaneb/Desktop/coffe-app/src/index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Form from './views/ProductForm/form/form';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: '',\n  cache: new InMemoryCache()\n}); // const INSERT_DATA = gql`\n//     mutation InsertCoffee($data: CoffeeModel) {\n//         insertCoffee(coffee: [$data]) {\n//           returning {\n//                 coffeeName\n//                 coffeePrice\n//                 description\n//                 coffeeIMG\n//           }\n//         }\n//     }\n// `;\n// const UPDATE_DATA = gql`\n// mutation UpdateData($data: CoffeModel!) {\n//   updateCoffe(coffee: $data) {\n//     coffeeName\n//     coffeePrice\n//     description\n//     coffeeIMG\n//   }\n// }`;\n// const GET_DATA = gql`\n//   query GetCoffee {\n//     coffees {\n//       coffeeName\n//       coffeePrice\n//       description\n//       coffeeIMG\n//     }\n//   }\n// `;\n// const DELETE_DATA = gql`\n//   mutation deleteCoffee($data: CoffeModel) {\n//       deleteCoffee(coffee: $data) {\n//         id\n//       }\n//   }\n// `;\n\nconst Routing = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/form\",\n          component: Form\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_c = Routing;\nReactDOM.render( /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(Routing, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 77,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"Routing\");","map":{"version":3,"sources":["/Users/bushrajaneb/Desktop/coffe-app/src/index.tsx"],"names":["React","ReactDOM","Form","reportWebVitals","BrowserRouter","Router","Route","Switch","Redirect","ApolloClient","InMemoryCache","ApolloProvider","client","uri","cache","Routing","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,QAAjD,QAAgE,kBAAhE;AAGA,SACEC,YADF,EAEEC,aAFF,EAGEC,cAHF,QAIO,gBAJP;;;AAMA,MAAMC,MAAM,GAAG,IAAIH,YAAJ,CAAiB;AAC9BI,EAAAA,GAAG,EAAE,EADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIJ,aAAJ;AAFuB,CAAjB,CAAf,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMK,OAAO,GAAG,MAAM;AACpB,sBACE;AAAA,2BACA,QAAC,MAAD;AAAA,6BACA,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,SAAS,EAAEb;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAUD,CAXD;;KAAMa,O;AAaNd,QAAQ,CAACe,MAAT,eACE,QAAC,cAAD;AAAgB,EAAA,MAAM,EAAEJ,MAAxB;AAAA,yBACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADF,EAIEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAf,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Form from './views/ProductForm/form/form';\n\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\n\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider\n} from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri: '',\n  cache: new InMemoryCache()\n});\n\n// const INSERT_DATA = gql`\n//     mutation InsertCoffee($data: CoffeeModel) {\n//         insertCoffee(coffee: [$data]) {\n//           returning {\n//                 coffeeName\n//                 coffeePrice\n//                 description\n//                 coffeeIMG\n//           }\n//         }\n//     }\n// `;\n\n// const UPDATE_DATA = gql`\n// mutation UpdateData($data: CoffeModel!) {\n//   updateCoffe(coffee: $data) {\n//     coffeeName\n//     coffeePrice\n//     description\n//     coffeeIMG\n//   }\n// }`;\n\n// const GET_DATA = gql`\n//   query GetCoffee {\n//     coffees {\n//       coffeeName\n//       coffeePrice\n//       description\n//       coffeeIMG\n//     }\n//   }\n// `;\n\n// const DELETE_DATA = gql`\n//   mutation deleteCoffee($data: CoffeModel) {\n//       deleteCoffee(coffee: $data) {\n//         id\n//       }\n//   }\n// `;\n\nconst Routing = () => {\n  return (\n    <>\n    <Router>\n    <Switch>\n      <Route path=\"/form\" component={Form}></Route>\n      <Redirect to='/' />\n    </Switch>\n  </Router>\n  </>\n  );\n};\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n      <Routing />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}